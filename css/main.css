img,legend{border:0}body,html,p,ul{margin:0}body,html,legend,td,th,ul{padding:0}.topline,sub,sup{position:relative}html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}pre,textarea{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{}table{border-collapse:collapse;border-spacing:0}@font-face{font-family:HelveticaNeueCyrLight;src:url(../fonts/HelveticaNeueCyr/HelveticaNeueCyr-Light.eot);src:url(../fonts/HelveticaNeueCyr/HelveticaNeueCyr-Light.woff) format("woff"),url(../fonts/HelveticaNeueCyr/HelveticaNeueCyr-Light.ttf) format("truetype")}@font-face{font-family:HelveticaNeueCyrBold;src:url(../fonts/HelveticaNeueCyr/HelveticaNeueCyr-Bold.eot);src:url(../fonts/HelveticaNeueCyr/HelveticaNeueCyr-Bold.woff) format("woff"),url(../fonts/HelveticaNeueCyr/HelveticaNeueCyr-Bold.ttf) format("truetype")}@font-face{font-family:HelveticaNeueCyrRoman;src:url(../fonts/HelveticaNeueCyr/HelveticaNeueCyr-Roman.eot);src:url(../fonts/HelveticaNeueCyr/HelveticaNeueCyr-Roman.woff) format("woff"),url(../fonts/HelveticaNeueCyr/HelveticaNeueCyr-Roman.ttf) format("truetype")}@font-face{font-family:GillSansSemiBold;src:url(../fonts/GillSans/GillSans-SemiBold.eot);src:url(../fonts/GillSans/GillSans-SemiBold.woff) format("woff"),url(../fonts/GillSans/GillSans-SemiBold.ttf) format("truetype"),url(../fonts/GillSans/GillSans-SemiBold.svg#GillSans-SemiBold) format("svg")}body,html{width:100%;height:100%;font-family:HelveticaNeueCyrLight,sans-serif}::-webkit-scrollbar{width:0;background:0 0}a:link{text-decoration:none;color:#fff;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out}a:hover{color:#009dd8}ul{list-style:none}.topline{width:100%;height:90px;display:block;background-color:#fff;font-family:HelveticaNeueCyrLight,sans-serif;-webkit-box-sizing:border-box;box-sizing:border-box}.topline .topline_wraper{max-width:1920px;margin:0 auto;display:block;position:relative}.topline .topline_wraper .topline_white{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:absolute;left:0;top:0;width:44%;height:87px;background-color:#fff;border-top:solid 3px #009dd8}.topline .topline_wraper .topline_white .topline_logo{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-preferred-size:67%;flex-basis:67%;position:relative;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:1;flex-shrink:1}.topline .topline_wraper .topline_white .topline_logo a{margin-left:auto}.topline .topline_wraper .topline_white .topline_name{display:-webkit-box;display:-ms-flexbox;display:flex;padding-left:26px;color:#2f2f2f;font-size:20px;text-transform:uppercase;min-width:255px;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;-ms-flex-negative:0;flex-shrink:0}.topline .topline_wraper .topline_white .topline_name .topline_name_p{position:relative;display:block}.topline .topline_wraper .topline_white .topline_name .topline_name_p:after{content:'';position:absolute;bottom:-7px;right:0;width:100%;height:1px;background-color:rgba(0,0,0,.25)}.topline .topline_wraper .topline_white:after{content:'';position:absolute;top:-3px;right:-1px;height:90px;width:90px;z-index:5;background:url(../img/topline_center.svg)}.topline .topline_wraper .topline_blue{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:absolute;right:0;top:0;width:56%;height:84px;background-color:#00aeef;border-bottom:solid 6px #009dd8}.topline .topline_wraper .topline_blue .topline_address{display:-webkit-box;display:-ms-flexbox;display:flex;position:relative;-ms-flex-preferred-size:370px;flex-basis:370px}.topline .topline_wraper .topline_blue .topline_address .topline_address_p{color:#fff;font-size:15px;margin-left:auto}.topline .topline_wraper .topline_blue .topline_phone{display:-webkit-box;display:-ms-flexbox;display:flex;position:relative;-ms-flex-preferred-size:105px;flex-basis:105px}.topline .topline_wraper .topline_blue .topline_phone img{margin-left:auto;height:60px;width:auto}.topline .topline_wraper .topline_blue .topline_phonenumb{display:-webkit-box;display:-ms-flexbox;display:flex;position:relative;-ms-flex-preferred-size:230px;flex-basis:230px}.topline .topline_wraper .topline_blue .topline_phonenumb .topline_phonenumb_p{color:#fff;font-size:30px;padding-left:10px}@media only screen and (max-width:1280px){.topline .topline_wraper .topline_blue .topline_address{-ms-flex-preferred-size:260px;flex-basis:260px}.topline .topline_wraper .topline_blue .topline_phone{-ms-flex-preferred-size:80px;flex-basis:80px}}@media only screen and (max-width:1024px){.topline .topline_wraper .topline_white .topline_logo a img{padding-left:10px;width:140px;height:auto}.topline .topline_wraper .topline_white .topline_name{padding-left:10px;font-size:14px;min-width:200px}.topline .topline_wraper .topline_blue .topline_address{-ms-flex-negative:0;flex-shrink:0;-ms-flex-preferred-size:220px;flex-basis:220px}.topline .topline_wraper .topline_blue .topline_address .topline_address_p{font-size:14px;padding-right:10%}.topline .topline_wraper .topline_blue .topline_phone{-ms-flex-preferred-size:50px;flex-basis:50px}.topline .topline_wraper .topline_blue .topline_phone img{height:40px}.topline .topline_wraper .topline_blue .topline_phonenumb{-ms-flex-preferred-size:200px;flex-basis:200px}.topline .topline_wraper .topline_blue .topline_phonenumb .topline_phonenumb_p{font-size:20px}}@media only screen and (max-width:768px){.topline .topline_wraper .topline_white{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:50%}.topline .topline_wraper .topline_white .topline_logo a img{padding-left:0;padding-top:5px;width:70%;height:auto}.topline .topline_wraper .topline_white .topline_name{padding-left:0;font-size:14px;min-width:100%}.topline .topline_wraper .topline_white .topline_name .topline_name_p{text-align:center;margin:0 auto}.topline .topline_wraper .topline_white .topline_name .topline_name_p:after{bottom:5px}.topline .topline_wraper .topline_blue{-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:50%}.topline .topline_wraper .topline_blue .topline_address{-ms-flex-negative:0;flex-shrink:0;-ms-flex-preferred-size:100%;flex-basis:100%}.topline .topline_wraper .topline_blue .topline_address .topline_address_p{font-size:14px;margin-left:0;margin-right:auto;padding-right:0;padding-left:10px;-ms-flex-item-align:end;align-self:flex-end}.topline .topline_wraper .topline_blue .topline_phone{-ms-flex-preferred-size:20%;flex-basis:20%}.topline .topline_wraper .topline_blue .topline_phone img{margin:0 auto;height:40px}.topline .topline_wraper .topline_blue .topline_phonenumb{-ms-flex-preferred-size:80%;flex-basis:80%}.topline .topline_wraper .topline_blue .topline_phonenumb .topline_phonenumb_p{font-size:20px}}@media only screen and (max-width:480px){.topline .topline_wraper .topline_white .topline_logo a img{padding-left:5px;padding-top:20px;width:50%;height:auto}.topline .topline_wraper .topline_white .topline_name{padding-left:0;font-size:12px}.topline .topline_wraper .topline_white .topline_name .topline_name_p{text-align:left;margin-left:15px;margin-right:auto}.topline .topline_wraper .topline_white .topline_name .topline_name_p:after{bottom:8px}.topline .topline_wraper .topline_blue{width:50%}.topline .topline_wraper .topline_blue .topline_address{-ms-flex-negative:0;flex-shrink:0;-ms-flex-preferred-size:100%;flex-basis:100%}.topline .topline_wraper .topline_blue .topline_address .topline_address_p{font-size:11px;margin-left:-10px;margin-right:auto;padding-right:0;padding-left:10px;-ms-flex-item-align:end;align-self:flex-end}.topline .topline_wraper .topline_blue .topline_phone{-ms-flex-preferred-size:20%;flex-basis:20%}.topline .topline_wraper .topline_blue .topline_phone img{margin:0 auto;height:25px}.topline .topline_wraper .topline_blue .topline_phonenumb{-ms-flex-preferred-size:80%;flex-basis:80%}.topline .topline_wraper .topline_blue .topline_phonenumb .topline_phonenumb_p{font-size:14px}}header{width:100%;height:765px;position:relative}header .header_wrapper{background:url(../img/mesh.png) fixed,url(../img/header.png) center no-repeat;height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;position:relative}header .header_wrapper:after,header .header_wrapper:before{position:absolute;top:0;width:50%;max-width:960px;height:100%;opacity:.3;content:""}header .header_wrapper:before{right:50%;background-color:#fff}header .header_wrapper:after{left:50%;background-color:#009dd8}header .header_wrapper .header_string{margin:265px auto 0;width:690px;text-align:center;position:relative;display:block;z-index:2}header .header_wrapper .header_string .header_logo{position:absolute;display:block;opacity:.75;width:194px;height:200px;top:-140px;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);background:url(../img/header_logo.png);z-index:-1}header .header_wrapper .header_string .header_string_first{color:rgba(0,0,0,.75);font-family:HelveticaNeueCyrBold,sans-serif;font-size:48px;text-transform:uppercase;padding-bottom:10px}header .header_wrapper .header_string .header_string_second{font-family:HelveticaNeueCyrBold,sans-serif;font-size:72px;text-transform:uppercase}header .header_wrapper .header_string .header_string_second span:first-child{color:#009dd8}header .header_wrapper .header_string .header_string_second span:last-child{color:#fff}header .header_wrapper .header_string .header_string_third{color:rgba(0,0,0,.75);font-family:HelveticaNeueCyrBold,sans-serif;font-size:48px;padding-bottom:35px}header .header_wrapper .header_string .header_string_fourth{color:rgba(0,0,0,.75);font-family:HelveticaNeueCyrLight,sans-serif;font-size:36px;padding-bottom:35px}header .header_wrapper .header_string a.btn{display:block;position:relative;width:640px;height:86px;margin:0 auto;z-index:2}header .header_wrapper .header_string a.btn .btn_outer{position:absolute;width:640px;height:86px;border-radius:43px;background-color:#00aeef}header .header_wrapper .header_string a.btn .btn_outer .btn_inner{position:absolute;top:0;bottom:0;left:0;right:0;margin:auto;color:#fff;width:626px;height:68px;background:-webkit-gradient(linear,left bottom,left top,from(#009dd8),to(#00aeef));background:-o-linear-gradient(bottom,#009dd8 0,#00aeef 100%);background:linear-gradient(to top,#009dd8 0,#00aeef 100%);border:1px solid #fff;border-radius:34px;-webkit-box-shadow:inset 0 0 0 1px #fff;box-shadow:inset 0 0 0 1px #fff;line-height:68px;font-size:24px}header .header_wrapper .header_string a.btn:after,header .header_wrapper .header_string a.btn:before{z-index:-1;position:absolute;content:"";bottom:15px;top:0;left:10px;width:50%;max-width:320px;border-radius:63px;-webkit-box-shadow:0 15px 15px 1px rgba(0,0,0,.2);box-shadow:0 15px 15px 1px rgba(0,0,0,.2);-webkit-transform:rotate(-5deg);-ms-transform:rotate(-5deg);transform:rotate(-5deg)}header .header_wrapper .header_string a.btn:after{-webkit-transform:rotate(5deg);-ms-transform:rotate(5deg);transform:rotate(5deg);right:10px;left:auto}header .header_wrapper .header_string a.btn:hover .btn_inner{background:-webkit-gradient(linear,left bottom,left top,from(#00aeef),to(#009dd8));background:-o-linear-gradient(bottom,#00aeef 0,#009dd8 100%);background:linear-gradient(to top,#00aeef 0,#009dd8 100%)}@media only screen and (max-width:1024px){header{height:auto}header .header_wrapper{background:url(../img/mesh.png) fixed,url(../img/header.png) center top no-repeat;background-size:cover,1440px auto}header .header_wrapper:before{right:50%;top:0;width:50%;max-width:960px;height:100%}header .header_wrapper:after{left:50%;top:0;width:50%;max-width:960px;height:100%}header .header_wrapper .header_string{margin:165px auto 50px;width:500px}header .header_wrapper .header_string .header_logo{width:144px;height:120px;top:-90px;left:50%;background-size:140px auto;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}header .header_wrapper .header_string .header_string_first{font-size:36px;padding-bottom:10px}header .header_wrapper .header_string .header_string_second{font-size:48px}header .header_wrapper .header_string .header_string_third{font-size:36px;padding-bottom:18px}header .header_wrapper .header_string .header_string_fourth{font-size:24px;padding-bottom:35px}header .header_wrapper .header_string a.btn{width:480px;height:64px;margin:0 auto}header .header_wrapper .header_string a.btn .btn_outer{width:480px;height:64px;border-radius:32px}header .header_wrapper .header_string a.btn .btn_outer .btn_inner{width:464px;height:50px;border:1px solid #fff;border-radius:25px;-webkit-box-shadow:inset 0 0 0 1px #fff;box-shadow:inset 0 0 0 1px #fff;line-height:50px;font-size:18px}header .header_wrapper .header_string a.btn:after,header .header_wrapper .header_string a.btn:before{bottom:15px;top:0;left:10px;width:50%;max-width:320px;border-radius:63px;-webkit-box-shadow:0 15px 15px 1px rgba(0,0,0,.2);box-shadow:0 15px 15px 1px rgba(0,0,0,.2);-webkit-transform:rotate(-5deg);-ms-transform:rotate(-5deg);transform:rotate(-5deg)}header .header_wrapper .header_string a.btn:after{-webkit-transform:rotate(5deg);-ms-transform:rotate(5deg);transform:rotate(5deg);right:10px;left:auto}}@media only screen and (max-width:768px){header{height:auto}header .header_wrapper{background:url(../img/mesh.png) fixed,url(../img/header.png) center top no-repeat;background-size:cover,992px auto}header .header_wrapper:before{right:50%;top:0;width:50%;max-width:960px;height:100%}header .header_wrapper:after{left:50%;top:0;width:50%;max-width:960px;height:100%}header .header_wrapper .header_string{margin:65px auto 30px;width:300px}header .header_wrapper .header_string .header_logo{width:80px;height:80px;top:-50px;left:50%;background:url(../img/header_logo.png) no-repeat;background-size:80px auto;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}header .header_wrapper .header_string .header_string_first{font-size:24px;padding-bottom:10px}header .header_wrapper .header_string .header_string_second{font-size:28px}header .header_wrapper .header_string .header_string_third{font-size:24px;padding-bottom:18px}header .header_wrapper .header_string .header_string_fourth{font-size:16px;padding-bottom:25px}header .header_wrapper .header_string a.btn{width:300px;height:44px;margin:0 auto}header .header_wrapper .header_string a.btn .btn_outer{width:300px;height:44px;border-radius:22px}header .header_wrapper .header_string a.btn .btn_outer .btn_inner{width:284px;height:30px;border:1px solid #fff;border-radius:15px;-webkit-box-shadow:inset 0 0 0 1px #fff;box-shadow:inset 0 0 0 1px #fff;line-height:30px;font-size:12px}header .header_wrapper .header_string a.btn:after,header .header_wrapper .header_string a.btn:before{bottom:15px;top:0;left:10px;width:50%;max-width:320px;border-radius:63px;-webkit-box-shadow:0 15px 15px 1px rgba(0,0,0,.2);box-shadow:0 15px 15px 1px rgba(0,0,0,.2);-webkit-transform:rotate(-5deg);-ms-transform:rotate(-5deg);transform:rotate(-5deg)}header .header_wrapper .header_string a.btn:after{-webkit-transform:rotate(5deg);-ms-transform:rotate(5deg);transform:rotate(5deg);right:10px;left:auto}}.forwho{width:100%;height:auto;position:relative}.forwho .forwho_wraper{height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;position:relative;background:url(../img/forwho_bg.png) top center no-repeat #ededed;max-width:1920px;margin:0 auto}.forwho .forwho_wraper .forwho_title{width:350px;height:70px;border:3px solid #fff;margin:90px auto 0}.forwho .forwho_wraper .forwho_title .forwho_title_p{text-align:center;position:relative;width:350px;height:70px;color:#2f2f2f;line-height:76px;letter-spacing:2px;font-family:HelveticaNeueCyrRoman,sans-serif;font-size:22px;text-transform:uppercase}.forwho .forwho_wraper .forwho_title .forwho_title_p:after{content:"";position:absolute;left:-3px;top:-3px;width:50%;height:100%;background-color:transparent;border:3px solid #00aeef;border-right:none;z-index:2}.forwho .forwho_wraper .forwho_row{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin:70px auto 100px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.forwho .forwho_wraper .forwho_row .forwho_block{display:block;position:relative}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case{width:356px;height:270px;border:7px solid #fff;margin:0 15px;z-index:3;color:#fff;position:relative;overflow:hidden}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case .forwho_logo{position:absolute;background:url(../img/header_logo.png) no-repeat;top:110px;right:-60px;width:200px;height:200px;opacity:.3}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case.forwho_case_blue{background-color:#00aeef}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case.forwho_case_blue:after{content:"";position:absolute;right:0;top:0;width:50%;height:100%;background-color:#009dd8;z-index:-1}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case.forwho_case_green{background-color:#00a88d}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case.forwho_case_green:after{content:"";position:absolute;right:0;top:0;width:50%;height:100%;background-color:#00947d;z-index:-1}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case.forwho_case_orange{background-color:#d27748}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case.forwho_case_orange:after{content:"";position:absolute;right:0;top:0;width:50%;height:100%;background-color:#c0693c;z-index:-1}.forwho .forwho_wraper .forwho_row .forwho_block:after,.forwho .forwho_wraper .forwho_row .forwho_block:before{position:absolute;content:"";width:50%;height:60%;bottom:0;left:25px;border-radius:50%;-webkit-box-shadow:0 8px 20px rgba(0,0,0,.25);box-shadow:0 8px 20px rgba(0,0,0,.25);-webkit-transform:rotate(-10deg);-ms-transform:rotate(-10deg);transform:rotate(-10deg)}.forwho .forwho_wraper .forwho_row .forwho_block:after{-webkit-transform:rotate(10deg);-ms-transform:rotate(10deg);transform:rotate(10deg);right:25px;left:auto}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case_header{display:block;width:100%;font-size:22px;text-align:center;text-transform:uppercase;margin:40px 0 35px;letter-spacing:2px}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case_text{display:block;font-size:17px;text-align:center;margin:0 auto;padding:0 33px}@media only screen and (max-width:1200px){.forwho .forwho_wraper{max-width:1280px;background:url(../img/forwho_bg.png) top center no-repeat #ededed;background-size:contain}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case{width:290px;height:220px;margin:0 10px}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case .forwho_logo{background:url(../img/header_logo.png) no-repeat;top:100px;right:0;width:120px;height:120px}.forwho .forwho_wraper .forwho_row .forwho_block:after,.forwho .forwho_wraper .forwho_row .forwho_block:before{height:60%;bottom:0;left:25px;border-radius:50%;-webkit-box-shadow:0 8px 20px rgba(0,0,0,.25);box-shadow:0 8px 20px rgba(0,0,0,.25);-webkit-transform:rotate(-10deg);-ms-transform:rotate(-10deg);transform:rotate(-10deg)}.forwho .forwho_wraper .forwho_row .forwho_block:after{-webkit-transform:rotate(10deg);-ms-transform:rotate(10deg);transform:rotate(10deg);right:25px;left:auto}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case_header{font-size:18px;margin:30px 0 25px}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case_text{font-size:14px;margin:0 auto;padding:0 20px}}@media only screen and (max-width:992px){.forwho .forwho_wraper{max-width:1280px}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case{width:220px;height:180px;margin:0 5px}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case .forwho_logo{background:url(../img/header_logo.png) no-repeat;background-size:100%;top:90px;right:-30px;width:100px;height:100px}.forwho .forwho_wraper .forwho_row .forwho_block:after,.forwho .forwho_wraper .forwho_row .forwho_block:before{height:60%;bottom:0;left:25px;border-radius:50%;-webkit-box-shadow:0 8px 20px rgba(0,0,0,.25);box-shadow:0 8px 20px rgba(0,0,0,.25);-webkit-transform:rotate(-10deg);-ms-transform:rotate(-10deg);transform:rotate(-10deg)}.forwho .forwho_wraper .forwho_row .forwho_block:after{-webkit-transform:rotate(10deg);-ms-transform:rotate(10deg);transform:rotate(10deg);right:25px;left:auto}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case_header{font-size:14px;margin:30px 0 20px}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case_text{font-size:12px;margin:0 auto;padding:0 10px}}@media only screen and (max-width:768px){.forwho .forwho_wraper{height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;position:relative;background:url(../img/forwho_bg.png) top center no-repeat #ededed;background-size:100%;max-width:1024px;margin:0 auto}.forwho .forwho_wraper .forwho_row{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-top:0}.forwho .forwho_wraper .forwho_row .forwho_block{margin-top:70px}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case{width:356px;height:270px;margin:0 15px}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case .forwho_logo{background:url(../img/header_logo.png) no-repeat;top:110px;right:-60px;width:200px;height:200px}.forwho .forwho_wraper .forwho_row .forwho_block:after,.forwho .forwho_wraper .forwho_row .forwho_block:before{position:absolute;content:"";width:50%;height:60%;bottom:0;left:25px;border-radius:50%;-webkit-box-shadow:0 8px 20px rgba(0,0,0,.25);box-shadow:0 8px 20px rgba(0,0,0,.25);-webkit-transform:rotate(-10deg);-ms-transform:rotate(-10deg);transform:rotate(-10deg)}.forwho .forwho_wraper .forwho_row .forwho_block:after{-webkit-transform:rotate(10deg);-ms-transform:rotate(10deg);transform:rotate(10deg);right:25px;left:auto}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case_header{font-size:22px;margin:40px 0 35px;letter-spacing:2px}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case_text{font-size:17px;padding:0 33px}}@media only screen and (max-width:480px){.forwho .forwho_wraper{max-width:1280px;background-size:contain}.forwho .forwho_wraper .forwho_title{width:280px;height:50px}.forwho .forwho_wraper .forwho_title .forwho_title_p{width:280px;height:50px;line-height:56px;font-size:18px}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case{width:290px;height:220px;margin:0 10px}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case .forwho_logo{top:100px;right:0;width:120px;height:120px}.forwho .forwho_wraper .forwho_row .forwho_block:after,.forwho .forwho_wraper .forwho_row .forwho_block:before{height:60%;bottom:0;left:25px;border-radius:50%;-webkit-box-shadow:0 8px 20px rgba(0,0,0,.25);box-shadow:0 8px 20px rgba(0,0,0,.25);-webkit-transform:rotate(-10deg);-ms-transform:rotate(-10deg);transform:rotate(-10deg)}.forwho .forwho_wraper .forwho_row .forwho_block:after{-webkit-transform:rotate(10deg);-ms-transform:rotate(10deg);transform:rotate(10deg);right:25px;left:auto}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case_header{font-size:18px;margin:30px 0 25px}.forwho .forwho_wraper .forwho_row .forwho_block .forwho_case_text{font-size:14px;margin:0 auto;padding:0 20px}}.chief{width:100%;height:380px;position:relative}.chief .chief_wraper{height:100%;max-width:1920px;display:-webkit-box;display:-ms-flexbox;display:flex;margin:0 auto;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;position:relative;background:-webkit-gradient(linear,left top,left bottom,from(#ededed),color-stop(80%,#ededed),to(#c2c2c2));background:-o-linear-gradient(top,#ededed 0,#ededed 80%,#c2c2c2 100%);background:linear-gradient(to bottom,#ededed 0,#ededed 80%,#c2c2c2 100%)}.chief .chief_wraper .chief_textblock{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:770px}.chief .chief_wraper .chief_textblock .chief_title .chief_title_head{margin-top:30px;color:rgba(0,0,0,.75);font-family:HelveticaNeueCyrBold,sans-serif;font-size:49px;text-align:right}.chief .chief_wraper .chief_textblock .chief_title .chief_title_p{color:#000;font-family:HelveticaNeueCyrLight,sans-serif;font-size:24px;text-align:right}.chief .chief_wraper .chief_textblock .chief_info{width:756px;height:146px;border:7px solid #fff;color:#fff;background-color:#00aeef;margin-top:35px;position:relative}.chief .chief_wraper .chief_textblock .chief_info .chief_info_p{font-size:17px;text-align:left;padding:20px 45px 0 25px}.chief .chief_wraper .chief_textblock .chief_info .chief_info_jam{display:block;position:absolute;width:40px;height:41px;bottom:-8px;left:-8px;background-color:#ededed;z-index:2}.chief .chief_wraper .chief_textblock .chief_info .chief_info_jam:after{content:'';position:absolute;top:-17px;right:-3px;width:0;height:0;border-top:26px solid transparent;border-right:26px solid #fff;border-bottom:26px solid transparent;-webkit-transform:rotate(135deg);-ms-transform:rotate(135deg);transform:rotate(135deg)}.chief .chief_wraper .chief_textblock .chief_info .chief_info_jam-shadow{display:block;position:absolute;width:20px;height:30px;bottom:-5px;left:18px;background-color:rgba(0,0,0,.25);-webkit-transform:rotate(15deg);-ms-transform:rotate(15deg);transform:rotate(15deg)}.chief .chief_wraper .chief_textblock .chief_info .chief_info_arrow{display:block;position:absolute;width:15px;height:15px;bottom:64px;right:-16px;border-top:7px solid #fff;border-right:7px solid #fff;background-color:#00aeef;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}.chief .chief_wraper .chief_imgblock{display:-webkit-box;display:-ms-flexbox;display:flex;width:410px;background:url(../img/chief.png) 70px 15px no-repeat,url(../img/chief_bg.png) 20px 75px no-repeat}@media only screen and (max-width:1200px){.chief{height:380px}.chief .chief_wraper{max-width:1366px}.chief .chief_wraper .chief_textblock{width:470px}.chief .chief_wraper .chief_textblock .chief_title .chief_title_head{font-size:49px}.chief .chief_wraper .chief_textblock .chief_title .chief_title_p{font-size:24px}.chief .chief_wraper .chief_textblock .chief_info{width:460px;height:200px;margin-top:20px}.chief .chief_wraper .chief_textblock .chief_info .chief_info_p{font-size:17px;padding:20px 45px 0}.chief .chief_wraper .chief_textblock .chief_info .chief_info_jam{background-color:#dadada}.chief .chief_wraper .chief_textblock .chief_info .chief_info_arrow{bottom:84px}.chief .chief_wraper .chief_imgblock{display:-webkit-box;display:-ms-flexbox;display:flex;width:410px;background:url(../img/chief.png) 60px 15px no-repeat,url(../img/chief_bg.png) 20px 75px no-repeat}}@media only screen and (max-width:992px){.chief{height:380px}.chief .chief_wraper{max-width:1024px}.chief .chief_wraper .chief_textblock{width:380px}.chief .chief_wraper .chief_textblock .chief_title .chief_title_head{margin-top:20px;font-size:36px}.chief .chief_wraper .chief_textblock .chief_title .chief_title_p{font-size:18px}.chief .chief_wraper .chief_textblock .chief_info{width:370px;height:200px;margin-top:20px}.chief .chief_wraper .chief_textblock .chief_info .chief_info_p{font-size:15px;padding:20px 45px 0}.chief .chief_wraper .chief_textblock .chief_info .chief_info_jam{background-color:#ededed}.chief .chief_wraper .chief_textblock .chief_info .chief_info_arrow{bottom:84px}.chief .chief_wraper .chief_imgblock{display:-webkit-box;display:-ms-flexbox;display:flex;width:370px;background:url(../img/chief.png) 60px 15px no-repeat,url(../img/chief_bg.png) 20px 75px no-repeat;background-size:contain,contain}}@media only screen and (max-width:768px){.chief{width:100%;display:block;position:relative;height:auto}.chief .chief_wraper,.chief .chief_wraper .chief_textblock{display:-webkit-box;display:-ms-flexbox;-webkit-box-orient:vertical;-webkit-box-direction:normal;position:relative}.chief .chief_wraper{width:100%;height:auto;max-width:768px;display:flex;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.chief .chief_wraper .chief_textblock{display:flex;-ms-flex-direction:column;flex-direction:column;width:90%;margin:0 auto}.chief .chief_wraper .chief_textblock .chief_title{width:90%;margin:0 auto}.chief .chief_wraper .chief_textblock .chief_title .chief_title_head{margin-top:0;font-size:49px}.chief .chief_wraper .chief_textblock .chief_title .chief_title_p{font-size:24px}.chief .chief_wraper .chief_textblock .chief_info{width:90%;margin:35px auto 0;height:auto;border:7px solid #fff;position:relative}.chief .chief_wraper .chief_textblock .chief_info .chief_info_p{font-size:17px;text-align:left;padding:20px 45px}.chief .chief_wraper .chief_textblock .chief_info .chief_info_arrow{bottom:-16px;right:40px;-webkit-transform:rotate(135deg);-ms-transform:rotate(135deg);transform:rotate(135deg)}.chief .chief_wraper .chief_imgblock{display:-webkit-box;display:-ms-flexbox;display:flex;position:relative;width:70%;height:380px;margin:0 auto;background:url(../img/chief.png) 70px 15px no-repeat,url(../img/chief_bg.png) 20px 75px no-repeat}}@media only screen and (max-width:560px){.chief .chief_wraper .chief_textblock .chief_title .chief_title_head{font-size:32px}.chief .chief_wraper .chief_textblock .chief_title .chief_title_p{font-size:18px}.chief .chief_wraper .chief_textblock .chief_info .chief_info_p{font-size:14px;padding:20px 40px}.chief .chief_wraper .chief_imgblock{width:90%;height:380px;background:url(../img/chief.png) bottom left no-repeat,url(../img/chief_bg.png) 20px 75px no-repeat;background-size:280px,90%}}.study,.study .study_wraper{width:100%;position:relative}.study{height:auto}.study .study_wraper{height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;max-width:1920px;margin:0 auto;background:url(../img/forwho_bg.png) top center no-repeat #ededed}.study .study_wraper .study_title{width:570px;height:70px;border:3px solid #fff;margin:95px auto 0}.study .study_wraper .study_title .study_title_p{text-align:center;position:relative;width:570px;height:70px;color:#2f2f2f;line-height:75px;letter-spacing:2px;font-family:HelveticaNeueCyrRoman,sans-serif;font-size:22px;text-transform:uppercase}.study .study_wraper .study_title .study_title_p:after{content:"";position:absolute;left:-3px;top:-3px;width:50%;height:100%;background-color:transparent;border:3px solid #00aeef;border-right:none;z-index:2}.study .study_wraper .study_row{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-ms-flex-wrap:wrap;flex-wrap:wrap;margin:70px auto 115px}.study .study_wraper .study_row .study_block{width:270px;height:330px;display:block;position:relative;margin:0 15px}.study .study_wraper .study_row .study_block:first-child{margin-left:0}.study .study_wraper .study_row .study_block:last-child{margin-right:0}.study .study_wraper .study_row .study_block .study_case{width:100%;height:100%;z-index:3;position:relative;background-color:#00aeef;overflow:hidden}.study .study_wraper .study_row .study_block .study_case .study_case_text{color:#fff;text-align:center;font-size:17px;padding:0 10px;margin-top:40px}.study .study_wraper .study_row .study_block .study_case .study_logo{position:absolute;background:url(../img/header_logo.png) no-repeat;bottom:-40px;right:-60px;width:200px;height:200px;opacity:.3}.study .study_wraper .study_row .study_block .study_case:after{content:"";position:absolute;right:0;top:0;width:50%;height:100%;background-color:#009dd8;z-index:-1}.study .study_wraper .study_row .study_block:after,.study .study_wraper .study_row .study_block:before{position:absolute;content:"";width:50%;height:30%;bottom:5px;left:20px;border-radius:30%;-webkit-box-shadow:0 8px 17px 2px rgba(0,0,0,.25);box-shadow:0 8px 17px 2px rgba(0,0,0,.25);-webkit-transform:rotate(-5deg);-ms-transform:rotate(-5deg);transform:rotate(-5deg)}.study .study_wraper .study_row .study_block:after{-webkit-transform:rotate(5deg);-ms-transform:rotate(5deg);transform:rotate(5deg);right:20px;left:auto}@media only screen and (max-width:1200px){.study .study_wraper{max-width:1200px;background:url(../img/forwho_bg.png) top center no-repeat #ededed;background-size:100%}.study .study_wraper .study_row{max-width:600px}.study .study_wraper .study_row .study_block{margin-bottom:30px}.study .study_wraper .study_row .study_block:first-child{margin-left:15px}.study .study_wraper .study_row .study_block:last-child{margin-right:15px}}@media only screen and (max-width:580px){.study .study_wraper{max-width:640px}.study .study_wraper .study_title{width:450px;height:50px;margin:95px auto 0}.study .study_wraper .study_title .study_title_p{width:450px;height:50px;line-height:56px;font-size:18px}.study .study_wraper .study_row{max-width:600px}.study .study_wraper .study_row .study_block{margin-bottom:30px}.study .study_wraper .study_row .study_block:first-child{margin-left:15px}.study .study_wraper .study_row .study_block:last-child{margin-right:15px}}@media only screen and (max-width:460px){.study .study_wraper,.study .study_wraper .study_row{max-width:460px}.study .study_wraper .study_title{width:300px;height:40px;margin:95px auto 0}.study .study_wraper .study_title .study_title_p{width:300px;height:40px;line-height:46px;font-size:11px}.study .study_wraper .study_row .study_block{margin-bottom:30px}.study .study_wraper .study_row .study_block:first-child{margin-left:15px}.study .study_wraper .study_row .study_block:last-child{margin-right:15px}}.footer_wrapper{position:relative;display:block;min-width:100%;min-height:100%;overflow:hidden}.footer_wrapper .footer_wrapper_empty{height:160px;width:100%;margin:0 auto}.footer{position:relative;display:block;height:160px;width:100%;max-width:1920px;margin:-160px auto 0;background-color:#37606a}.footer .footer_stuff_wraper{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;max-width:1170px;height:100%;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:0 auto}.footer .footer_stuff_wraper .footer_address{display:-webkit-box;display:-ms-flexbox;display:flex;position:relative;-ms-flex-preferred-size:367px;flex-basis:367px}.footer .footer_stuff_wraper .footer_address .footer_address_p{color:#fff;font-size:15px;margin-left:auto}.footer .footer_stuff_wraper .footer_phone{display:-webkit-box;display:-ms-flexbox;display:flex;position:relative;-ms-flex-preferred-size:95px;flex-basis:95px}.footer .footer_stuff_wraper .footer_phone img{margin-left:auto;height:60px;width:auto;opacity:.5}.footer .footer_stuff_wraper .footer_phonenumb{display:-webkit-box;display:-ms-flexbox;display:flex;position:relative;-ms-flex-preferred-size:230px;flex-basis:230px}.footer .footer_stuff_wraper .footer_phonenumb .footer_phonenumb_p{color:#fff;font-size:30px;margin-left:auto}.footer .footer_stuff_wraper .footer_social{position:relative;-ms-flex-preferred-size:300px;flex-basis:300px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.footer .footer_stuff_wraper .footer_social .footer_social_icons{display:-webkit-box;display:-ms-flexbox;display:flex;margin-bottom:20px;margin-left:auto}.footer .footer_stuff_wraper .footer_social .footer_social_icons .social_icons{width:25px;height:25px;background-color:rgba(255,255,255,.25);margin:0 6px}.footer .footer_stuff_wraper .footer_social .footer_social_icons .social_icons:first-child,.footer .footer_stuff_wraper .footer_social .footer_social_icons .social_icons:last-child{margin:0}.footer .footer_stuff_wraper .footer_social .footer_social_icons .social_icons a{color:#37606a;display:block;line-height:25px;width:25px;text-align:center}.footer .footer_stuff_wraper .footer_social .footer_developer{opacity:.5;margin-left:auto;margin-right:-40px}.footer .footer_stuff_wraper .footer_social .footer_developer a{color:#fff;font-family:GillSansSemiBold,sans-serif;font-size:15px}@media only screen and (max-width:1280px){.footer .footer_stuff_wraper .footer_social .footer_developer{margin-right:0}}@media only screen and (max-width:1200px){.footer .footer_stuff_wraper{max-width:1170px;margin:0 10px}.footer .footer_stuff_wraper .footer_phone,.footer .footer_stuff_wraper .footer_phonenumb{-ms-flex-negative:0;flex-shrink:0}}@media only screen and (max-width:1024px){.footer .footer_stuff_wraper{max-width:1170px}.footer .footer_stuff_wraper .footer_logo a img{width:80%}.footer .footer_stuff_wraper .footer_address{-ms-flex-preferred-size:260px;flex-basis:260px}.footer .footer_stuff_wraper .footer_address .footer_address_p{font-size:14px}.footer .footer_stuff_wraper .footer_phone{-ms-flex-preferred-size:50px;flex-basis:50px}.footer .footer_stuff_wraper .footer_phone img{height:40px}.footer .footer_stuff_wraper .footer_phonenumb{-ms-flex-preferred-size:160px;flex-basis:160px}.footer .footer_stuff_wraper .footer_phonenumb .footer_phonenumb_p{font-size:20px}.footer .footer_stuff_wraper .footer_social{-ms-flex-preferred-size:300px;flex-basis:300px}}@media only screen and (max-width:768px){.footer{max-width:800px}.footer .footer_stuff_wraper{-ms-flex-wrap:wrap;flex-wrap:wrap;max-width:800px;height:100%;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:0 auto}.footer .footer_stuff_wraper .footer_logo{-ms-flex-preferred-size:50%;flex-basis:50%}.footer .footer_stuff_wraper .footer_logo a img{display:block;margin-left:auto;margin-right:0;width:150px;padding:0 10px}.footer .footer_stuff_wraper .footer_address{display:-webkit-box;display:-ms-flexbox;display:flex;position:relative;-ms-flex-preferred-size:50%;flex-basis:50%;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end}.footer .footer_stuff_wraper .footer_address .footer_address_p{display:block;margin-right:auto;margin-left:0;font-size:15px}.footer .footer_stuff_wraper .footer_phone{-ms-flex-preferred-size:25%;flex-basis:25%}.footer .footer_stuff_wraper .footer_phone img{margin-left:auto;height:40px;width:auto;opacity:.5}.footer .footer_stuff_wraper .footer_phonenumb{display:-webkit-box;display:-ms-flexbox;display:flex;position:relative;-ms-flex-preferred-size:150px;flex-basis:150px;margin-left:0}.footer .footer_stuff_wraper .footer_phonenumb .footer_phonenumb_p{color:#fff;font-size:20px}.footer .footer_stuff_wraper .footer_social{-ms-flex-preferred-size:50%;flex-basis:50%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.footer .footer_stuff_wraper .footer_social .footer_social_icons{display:-webkit-box;display:-ms-flexbox;display:flex;margin-bottom:0;margin-left:10px}.footer .footer_stuff_wraper .footer_social .footer_social_icons .social_icons{width:25px;height:25px;background-color:rgba(255,255,255,.25);margin:0 6px}.footer .footer_stuff_wraper .footer_social .footer_social_icons .social_icons:first-child,.footer .footer_stuff_wraper .footer_social .footer_social_icons .social_icons:last-child{margin:0}.footer .footer_stuff_wraper .footer_social .footer_social_icons .social_icons a{color:#37606a;display:block;line-height:25px;width:25px;text-align:center}.footer .footer_stuff_wraper .footer_social .footer_developer{opacity:.5;margin-left:5px;margin-right:auto;-ms-flex-item-align:center;align-self:center}.footer .footer_stuff_wraper .footer_social .footer_developer a{color:#fff;font-family:GillSansSemiBold,sans-serif;font-size:12px}}@media only screen and (max-width:640px){.footer,.footer .footer_stuff_wraper{max-width:640px}.footer .footer_stuff_wraper .footer_phone{-ms-flex-preferred-size:15%;flex-basis:15%}}@media only screen and (max-width:460px){.footer .footer_stuff_wraper .footer_address .footer_address_p,.footer .footer_stuff_wraper .footer_social .footer_developer a{font-size:10px}.footer{max-width:460px}.footer .footer_stuff_wraper{-ms-flex-wrap:wrap;flex-wrap:wrap;max-width:460px;height:100%;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:0 auto}.footer .footer_stuff_wraper .footer_logo{-ms-flex-preferred-size:50%;flex-basis:50%}.footer .footer_stuff_wraper .footer_logo a img{display:block;margin-left:auto;margin-right:0;width:100px;padding:0 10px}.footer .footer_stuff_wraper .footer_phone{-ms-flex-preferred-size:15%;flex-basis:15%}.footer .footer_stuff_wraper .footer_social{-ms-flex-preferred-size:65%;flex-basis:65%;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
